table peers;
log syslog all;

roa table dn42_roa {
	include "/var/lib/bird/bird6_roa_dn42.conf";
};

function is_valid_network() {
	return net ~ [
		fd00::/8{44,64} # ULA address space as per RFC 4193
	];
}

function is_self_net() {
	return net ~ [fd42:a:b::/48+];
}

template bgp dn42_peers {
	table peers;
	igp table master;
	local as 64719;
	path metric 1;
	import keep filtered;
	import filter {
		if (roa_check(dn42_roa, net, bgp_path.last) = ROA_INVALID) then {
			print "[dn42] ROA check failed for ", net, " ASN ", bgp_path.last;
			reject;
		}

		if is_valid_network() && !is_self_net() then {
			accept;
		}
		reject;
	};
	export filter {
		if is_valid_network() then {
			accept;
		}
		reject;
	};
	import limit 1000 action block;
};

template bgp exchanges {
		table peers;
		igp table master;
		local as 64719;
		path metric 1;
		import keep filtered;
		import filter {
			if (roa_check(dn42_roa, net, bgp_path.last) = ROA_INVALID) then {
				print "[dn42] ROA check failed for ", net, " ASN ", bgp_path.last;
				reject;
			}

			if is_valid_network() && !is_self_net() then {
					accept;
			}
			reject;
		};
		export filter {
			if is_valid_network() && is_self_net() then {
					accept;
			}
			reject;
		};
		import limit 10000 action block;
};

timeformat base         iso long;
timeformat log          iso long;
timeformat protocol     iso long;
timeformat route        iso long;
